I"ó<h1>Experience</h1>
<hr />
<h2>Software Engineer Intern</h2>
<h4>May 2020 - Aug 2020   Duke University</h4>
<ul>
  <li>Developed an <strong>Android application</strong> which enables users to explore the virtual word, build buildings, buy equipment, fight monsters, upgrade soldiers and add other users as friends while walking around in real world.</li>
  <li>Responsible for <strong>backend server development</strong>. Handled concurrency requests with <strong>multi-thread programming</strong>, realized server-client communication with <strong>TCP socket programming, JSON and Netty</strong>, interacted <strong>Postgres</strong> database with <strong>Hibernate</strong>.</li>
  <li>Applied <strong>Agile</strong> methodology, carried out issue tracking and CI/CD pipeline.</li>
  <li>Carried out unit tests with <strong>JUnit</strong> framework and used <strong>Mockito</strong> to mock external dependencies.</li>
</ul>

<hr />

<h2>Setup as standalone project page</h2>

<h2>Software Engineer Intern</h2>
<h4>May 2020 - Aug 2020   Duke University</h4>
<ul>
  <li>Developed an <strong>Android application</strong> which enables users to explore the virtual word, build buildings, buy equipment, fight monsters, upgrade soldiers and add other users as friends while walking around in real world.</li>
  <li>Responsible for <strong>backend server development</strong>. Handled concurrency requests with <strong>multi-thread programming</strong>, realized server-client communication with <strong>TCP socket programming, JSON and Netty</strong>, interacted <strong>Postgres</strong> database with <strong>Hibernate</strong>.</li>
  <li>Applied <strong>Agile</strong> methodology, carried out issue tracking and CI/CD pipeline.</li>
  <li>Carried out unit tests with <strong>JUnit</strong> framework and used <strong>Mockito</strong> to mock external dependencies.</li>
</ul>

<hr />

<h2>Setup inside existing project</h2>

<p>This is the most complicated use-case .. but itâ€™s the coolest.
Say youâ€™ve got your kickass project <code class="language-plaintext highlighter-rouge">github.com/t413/kicker</code> and want to have
some web presence to post about on <a href="http://news.ycombinator.com">hacker news</a>.
This will create an orphan branch called <code class="language-plaintext highlighter-rouge">gh_pages</code> in your repository
where you can publish changes, posts, images, and such. It wonâ€™t alter your code at all.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">cd</code> into your project on the command line</li>
  <li>use <code class="language-plaintext highlighter-rouge">git remote add -t publish singlepage git@github.com:t413/SinglePaged.git</code> to get access to this repository.</li>
  <li>use <code class="language-plaintext highlighter-rouge">git fetch singlepage publish:gh-pages</code> to fetch the remote branch</li>
  <li>use <code class="language-plaintext highlighter-rouge">git branch --set-upstream gh-pages singlepage/publish &amp;&amp; git checkout gh-pages;</code>
This creates and checks out an orphan branch called gh-pages that tracks the original and lets you make changes.</li>
  <li>When you run <code class="language-plaintext highlighter-rouge">git push gh-pages:origin/gh-pages</code> itâ€™ll be live at <em>yourusername.github.io/repositoryName</em></li>
</ul>

<p>Now hop over to <a href="#usage">Usage</a> to get it running with your own stuff!</p>

<p><strong>When you publish changes use <code class="language-plaintext highlighter-rouge">git push -u origin gh-pages</code></strong></p>

:ET